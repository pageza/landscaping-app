version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: landscaping_postgres
    environment:
      POSTGRES_DB: landscaping_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: landscaping_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: landscaping_api
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/landscaping_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app/backend:ro
    restart: unless-stopped

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker
    container_name: landscaping_worker
    environment:
      - ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/landscaping_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app/backend:ro
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit
    container_name: landscaping_mailpit
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    environment:
      - MP_SMTP_AUTH_ACCEPT_ANY=1
      - MP_SMTP_AUTH_ALLOW_INSECURE=1

volumes:
  postgres_data:
  redis_data: